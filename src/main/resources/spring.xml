<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
<context:component-scan base-package="com.zy">
<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan><!--排除扫描controller扫描-->

<!--    引入配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
<!--    配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver-class-name}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${user}"></property>
        <property name="password" value="${password}"></property>
    </bean>

<!--    配置SqlSessionFactoryBean可直接从容器中获取SqlSessionFactory的对象-->
<bean class="org.mybatis.spring.SqlSessionFactoryBean">
<!--设置mybatis核心配置文件的路径-->
<property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--    数据源-->
<property name="dataSource" ref="dataSource"></property>
<!--设置返回对应的包-->
<property name="typeAliasesPackage" value="com.zy.bean.tb_Book"/>
<!--分页插件-->
<property name="plugins">
    <array>
        <bean class="com.github.pagehelper.PageInterceptor"/>
    </array>
</property>

<!--<property name="mapperLocations" value="classpath:mappesr/*.xml"/>-->
</bean>


<!--将指定包下的所有mapper接口，通过sqlsession创建代理实现类对象，交个ioc管理，直接通过接口自动装配-->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.zy.mapper"/>
</bean>











<!--    &lt;!&ndash; 配置事务管理器，引用数据源&ndash;&gt;-->
<!--    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--            <property name="dataSource" ref="dataSource"></property>-->
<!--    </bean>-->
<!--    &lt;!&ndash;    开启事务注解驱动&ndash;&gt;-->
<!--    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>-->
</beans>